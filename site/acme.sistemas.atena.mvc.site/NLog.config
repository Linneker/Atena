<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off"
      internalLogFile="c:\temp\nlog-internal.log">

	<extensions>
		<add assembly="NLog.Web.AspNetCore" />
	</extensions>

	<targets async="true">

		<!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->
		<!--<target name="atenaDatabase2LogAsync" xsi:type="AsyncWrapper" queueLimit="10000" overflowAction="Discard">
			<target xsi:type="Database"
					  name="Database2Log"
					  connectionString="server=bd.thor.hostazul.com.br;Port=4406;database=105_atena;user=105_linneker;password=asDr3$@efF#7"
					  dbProvider="MySql.Data.MySqlClient.MySqlConnection, MySql.Data"
					  useTransactions="false"
					  keepConnection="false">

				<parameter name="TIME_STAMP" layout="${longdate}" />
				<parameter name="LOGLEVEL" layout="${level:uppercase=true}" />
				<parameter name="MESSAGE" layout="${message}" />
				<parameter name="MACHINE_NAME" layout="${machinename} " />
				<parameter name="PROCESS_NAME" layout="${processname}" />
				<parameter name="PROCESS_PATH" layout="${basedir:dir:file}" />
				<parameter name="VERSION" layout="${assembly-version:type=File}" />
				<parameter name="WIDENTITY" layout="${windows-identity}" />
				<parameter name="PID" layout="${processid}" />
				<parameter name="THREAD_ID" layout="${threadid}" />
				<parameter name="EXCEPTION" layout="${exception:tostring}" />

				<commandText>
					insert into 105_atena.LogAtena
					( TIME_STAMP,LOGLEVEL,MESSAGE,MACHINE_NAME,PROCESS_NAME,PROCESS_PATH,VERSION,WIDENTITY,PID,THREAD_ID,EXCEPTION)
					values
					( to_timestamp(:TIME_STAMP, 'YYYY-MM-DD HH24:MI:SS.FF'),:LOGLEVEL,:MESSAGE,:MACHINE_NAME,:PROCESS_NAME,:PROCESS_PATH,:VERSION,:WIDENTITY,:PID,:THREAD_ID,:EXCEPTION)
				</commandText>
			</target>
		</target>-->
		
		<target xsi:type="AsyncWrapper"
		   name="atenaLogFileAsync"
		   overflowAction="Discard"
		   queueLimit="10000"
		   batchSize="200"
		   timeToSleepBetweenBatches="1">
			<target xsi:type="File"
					name="atenaLogFile"
					fileName="${basedir}\\logs\\atena_log_${shortdate}.log"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768"
					layout="${longdate} | ${logger} | ${processid} | ${threadid} | ${uppercase:${level}} | ${message} | ${exception:format=tostring} | " />
		</target>

		<target xsi:type="AsyncWrapper"
            name="atenaLogFileErrorOnlyAsync"
            overflowAction="Discard"
            queueLimit="10000"
            batchSize="200"
            timeToSleepBetweenBatches="1">
			<target xsi:type="File"
					name="atenaLogFileErrorOnly"
					fileName="${basedir}\\logs\\atena_log_error_${shortdate}.log"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768"
					layout="${longdate} | ${logger} | ${processid} | ${threadid} | ${uppercase:${level}} | ${message} | ${exception:format=tostring} |" />
		</target>


		<target xsi:type="AsyncWrapper"
            name="atenaLogEfSqlFileAsync"
            overflowAction="Discard"
            queueLimit="10000"
            batchSize="200"
            timeToSleepBetweenBatches="1">
			<target xsi:type="File"
					name="atenaLogEfSqlFile"
					fileName="${basedir}\\logs\\atena_log_ef_sql_${shortdate}.log"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768"
					layout="${longdate} | ${uppercase:${level}} | ${message}" />
		</target>

		<target xsi:type="AsyncWrapper"
		   name="atenaLogAspNetCore"
		   overflowAction="Discard"
		   queueLimit="10000"
		   batchSize="200"
		   timeToSleepBetweenBatches="1">
			<target xsi:type="File" name="atena-web-log" fileName="${basedir}\\logs\atena-web-aspnet-${shortdate}.log"
					layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768" />
		</target>
		
		<target xsi:type="ColoredConsole" name="consoleLogger"
				  layout="${date} | ${level:uppercase=true } |${message} ${exception} | ${logger} | ${all-event-properties}" />

		<target xsi:type="Console" name="lifetimeConsole"
				layout="${level:truncate=4}\: ${logger}[0]${newline}      ${message}" />

	</targets>

	
	<rules>
		<logger name="Microsoft.EntityFrameworkCore.Database.Command" minlevel="Trace" writeTo="atenaLogEfSqlFileAsync">
			<filters defaultAction="Log">
				<when condition="contains('${message}','ENTRY')" action="IgnoreFinal" />
				<when condition="contains('${message}','EXIT')" action="IgnoreFinal" />
			</filters>
		</logger>
		<logger name="*" minlevel="Info" writeTo="atenaLogFileAsync, atenaLogAspNetCore, atenaDatabase2LogAsync">
			<filters defaultAction="Log">
				<when condition="contains('${logger}','Microsoft.EntityFrameworkCore')" action="Ignore" />
			</filters>
		</logger>

		<logger name="*" minlevel="Error" writeTo="atenaLogFileErrorOnlyAsync" />

		<logger name="Microsoft.Hosting.Lifetime" level="Info" writeTo="lifetimeConsole, atenaLogFileAsync" final="true" />
	</rules>
</nlog>