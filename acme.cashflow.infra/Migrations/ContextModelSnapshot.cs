// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using acme.cashflow.infra.Config;

namespace acme.cashflow.infra.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.Despesa", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CompetenciaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<bool>("DespesaFixa")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CompetenciaId");

                    b.ToTable("Despesa");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixa", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CompetenciaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SaldoFinalCaixa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SaldoOperacional")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CompetenciaId");

                    b.ToTable("FluxoDeCaixa");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixaDespesa", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("DespesaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("FluxoDeCaixaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("FluxoDeCaixaId");

                    b.ToTable("FluxoDeCaixaDespesa");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixaReceita", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("FluxoDeCaixaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ReceitaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("FluxoDeCaixaId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("FluxoDeCaixaReceita");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.Receita", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CompetenciaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("ReceitaFixa")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CompetenciaId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Seguranca.AutorizacaoApi", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("AccessKey")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("AutorizacaoApi");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Seguranca.Usuario", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Senha")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Util.Competencia", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Competencia");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.Despesa", b =>
                {
                    b.HasOne("acme.cashflow.domain.DTO.Util.Competencia", "Competencia")
                        .WithMany("Despesas")
                        .HasForeignKey("CompetenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competencia");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixa", b =>
                {
                    b.HasOne("acme.cashflow.domain.DTO.Util.Competencia", "Competencia")
                        .WithMany("FluxosDeCasas")
                        .HasForeignKey("CompetenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competencia");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixaDespesa", b =>
                {
                    b.HasOne("acme.cashflow.domain.DTO.Account.Despesa", "Despesa")
                        .WithMany("FluxoDeCaixasDespesas")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.cashflow.domain.DTO.Account.FluxoDeCaixa", "FluxoDeCaixa")
                        .WithMany("FluxoDeCaixasDespesas")
                        .HasForeignKey("FluxoDeCaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despesa");

                    b.Navigation("FluxoDeCaixa");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixaReceita", b =>
                {
                    b.HasOne("acme.cashflow.domain.DTO.Account.FluxoDeCaixa", "FluxoDeCaixa")
                        .WithMany("FluxoDeCaixasReceitas")
                        .HasForeignKey("FluxoDeCaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.cashflow.domain.DTO.Account.Receita", "Receita")
                        .WithMany("FluxoDeCaixasReceitas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FluxoDeCaixa");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.Receita", b =>
                {
                    b.HasOne("acme.cashflow.domain.DTO.Util.Competencia", "Competencia")
                        .WithMany("Receitas")
                        .HasForeignKey("CompetenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competencia");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.Despesa", b =>
                {
                    b.Navigation("FluxoDeCaixasDespesas");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.FluxoDeCaixa", b =>
                {
                    b.Navigation("FluxoDeCaixasDespesas");

                    b.Navigation("FluxoDeCaixasReceitas");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Account.Receita", b =>
                {
                    b.Navigation("FluxoDeCaixasReceitas");
                });

            modelBuilder.Entity("acme.cashflow.domain.DTO.Util.Competencia", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("FluxosDeCasas");

                    b.Navigation("Receitas");
                });
#pragma warning restore 612, 618
        }
    }
}
